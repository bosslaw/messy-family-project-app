{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-ccbda579.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","./src/app/pages/event-details/event-details.page.html","./src/app/pages/event-form/event-form.page.html","./src/app/pages/event-details/event-details-routing.module.ts","./src/app/pages/event-details/event-details.module.ts","./src/app/pages/event-details/event-details.page.scss","./src/app/pages/event-details/event-details.page.ts","./src/app/pages/event-form/event-form-routing.module.ts","./src/app/pages/event-form/event-form.module.ts","./src/app/pages/event-form/event-form.page.scss","./src/app/pages/event-form/event-form.page.ts","./src/app/services/auth/auth.service.ts","./src/app/services/events/events.service.ts","./src/app/services/http/http.service.ts","./src/app/services/toast/toast.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEiH;;;;;;;;;;;;;AC3CjH;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"common-es2015.js","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","/**\n * Check to see if the Haptic Plugin is available\n * @return Returns `true` or false if the plugin is available\n */\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.selection();\n    }\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionStart();\n    }\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionChanged();\n    }\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionEnd();\n    }\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title></ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button  (click)=\\\"dismiss()\\\">Close</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <h1>{{event.title}}</h1>\\n  <p *ngIf=\\\"event.start_date\\\"><b>Start: </b> {{event.start_date | date}}</p>\\n  <p *ngIf=\\\"event.end_date\\\"><b>End: </b> {{event.end_date | date}}</p>\\n  <p *ngIf=\\\"event.description\\\"><b>Description: </b> {{event.description}}</p>\\n  <p *ngIf=\\\"event.location\\\"><b>Location: </b> {{event.location}}</p>\\n</ion-content>\\n\";","export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>New Event</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button  (click)=\\\"dismiss()\\\">Close</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content >\\n  \\n    <ion-item>\\n      <ion-input type=\\\"text\\\" name=\\\"title\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"event.title\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-input type=\\\"text\\\" name=\\\"description\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"event.description\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-input type=\\\"text\\\" name=\\\"location\\\" placeholder=\\\"Location\\\" [(ngModel)]=\\\"event.location\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Start</ion-label>\\n      <ion-datetime displayFormat=\\\"MM/DD/YYYY HH:mm\\\" name=\\\"start_date\\\" pickerFormat=\\\"MMM D:HH:mm\\\" [(ngModel)]=\\\"event.start_date\\\" [min]=\\\"minDate\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>End</ion-label>\\n      <ion-datetime displayFormat=\\\"MM/DD/YYYY HH:mm\\\" name=\\\"end_date\\\" pickerFormat=\\\"MMM D:HH:mm\\\" [(ngModel)]=\\\"event.end_date\\\" [min]=\\\"minDate\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>All Day?</ion-label>\\n      <ion-checkbox name=\\\"allDay\\\" [(ngModel)]=\\\"event.allDay\\\"></ion-checkbox>\\n    </ion-item>\\n    <ion-button fill=\\\"outline\\\" expand=\\\"block\\\" (click)=\\\"addEvent()\\\" type=\\\"submit\\\">Add Event</ion-button>\\n  \\n    \\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EventDetailsPage } from './event-details.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventDetailsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EventDetailsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EventDetailsPageRoutingModule } from './event-details-routing.module';\n\nimport { EventDetailsPage } from './event-details.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EventDetailsPageRoutingModule\n  ],\n  declarations: [EventDetailsPage]\n})\nexport class EventDetailsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V2ZW50LWRldGFpbHMvZXZlbnQtZGV0YWlscy5wYWdlLnNjc3MifQ== */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-event-details',\n  templateUrl: './event-details.page.html',\n  styleUrls: ['./event-details.page.scss'],\n})\nexport class EventDetailsPage implements OnInit {\n\n  @Input() event: any;\n\n  constructor(\n    private modalCtrl: ModalController\n  ) { }\n\n  ngOnInit() {\n  }\n\n  dismiss() {\n    this.modalCtrl.dismiss();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EventFormPage } from './event-form.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventFormPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EventFormPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EventFormPageRoutingModule } from './event-form-routing.module';\n\nimport { EventFormPage } from './event-form.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EventFormPageRoutingModule\n  ],\n  declarations: [EventFormPage]\n})\nexport class EventFormPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2V2ZW50LWZvcm0vZXZlbnQtZm9ybS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\n\n@Component({\n  selector: 'app-event-form',\n  templateUrl: './event-form.page.html',\n  styleUrls: ['./event-form.page.scss'],\n})\nexport class EventFormPage implements OnInit {\n\n  event = {\n    title: '',\n    description: '',\n    start_date: new Date().toISOString(),\n    end_date: new Date().toISOString(),\n    location: '',\n    allDay: false\n  };\n\n  minDate = new Date().toISOString();\n  preselectedDate: any;\n\n  constructor(\n    private modalCtrl: ModalController,\n    public navParams: NavParams\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.preselectedDate = new Date(this.navParams.data.preselectedDate).toISOString();\n    this.event.start_date = this.preselectedDate;\n    this.event.end_date = this.preselectedDate;\n  }\n\n  dismiss() {\n    this.modalCtrl.dismiss();\n  }\n\n  addEvent() {\n    this.modalCtrl.dismiss(this.event);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AuthConstants } from '../../config/auth-constants';\nimport { HttpService } from '../http/http.service';\nimport { StorageService } from '../storage/storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  userData$ = new BehaviorSubject<any>('');\n\n  constructor(private httpService: HttpService, private storageService: StorageService, private router: Router) { }\n\n  getUserData() {\n    this.storageService.get(AuthConstants.AUTH).then(res => {\n      this.userData$.next(res);\n    })\n  }\n\n  signup(postData: any): Observable<any> {\n    return this.httpService.post('signup', postData);\n  }\n\n  login(postData: any): Observable<any> {\n    return this.httpService.post('login', postData);\n  }\n\n  logout() {\n    // this.storageService.clear();\n    // return this.httpService.post('logout');\n    this.storageService.removeItem(AuthConstants.AUTH).then(res => {\n      this.userData$.next('');\n      this.router.navigate([''])\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpService } from '../http/http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventsService {\n\n  constructor(\n    private httpService: HttpService\n  ) { }\n\n  addEvent(eventData: any): Observable<any> {\n    return this.httpService.post('events', eventData);\n  }\n\n  getEvents(): Observable<any> {\n    return this.httpService.get('events');\n  }\n\n  getLatestEvents(uid): Observable<any> {\n    return this.httpService.get('latest-events/'+uid);\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(private http: HttpClient) { }\n\n  post(serviceName: string, data: any) {\n\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Accept','application/json');\n\n    const options = { header: headers, withCredentials: false};\n\n    const url = environment.apiUrl + serviceName;\n\n    return this.http.post(url, data, options)\n\n  }\n\n  get(serviceName: string, data: any = []) {\n\n    const url = environment.apiUrl + serviceName;\n    const params = Object.keys(data).map(key => key + '=' + data[key]).join('&');\n\n    return this.http.get(url + '?'+ params)\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(public toastController: ToastController) { }\n\n  async presentToast(infoMessage: string) {\n    const toast = await this.toastController.create({\n      message: infoMessage,\n      duration: 2000\n    });\n    toast.present();\n  }\n}\n"],"sourceRoot":"webpack:///"}