{"version":3,"sources":["./src/app/pages/signup/signup.page.html","./src/app/pages/signup/signup-routing.module.ts","./src/app/pages/signup/signup.module.ts","./src/app/pages/signup/signup.page.scss","./src/app/pages/signup/signup.page.ts"],"names":[],"mappings":"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","file":"pages-signup-signup-module-es2015.js","sourcesContent":["export default \"<ion-content class=\\\"ion-padding\\\">\\n  <h1 class=\\\"center\\\">NEW ACCOUNT</h1>\\n  <form>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">First Name</ion-label>\\n        <ion-input autocomplete=\\\"off\\\" name=\\\"first_name\\\" type=\\\"text\\\" [(ngModel)]=\\\"postData.first_name\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Last Name</ion-label>\\n        <ion-input autocomplete=\\\"off\\\" name=\\\"last_name\\\" type=\\\"text\\\" [(ngModel)]=\\\"postData.last_name\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n      <ion-label position=\\\"stacked\\\">Email</ion-label>\\n      <ion-input autocomplete=\\\"off\\\" name=\\\"email\\\" type=\\\"text\\\" [(ngModel)]=\\\"postData.email\\\"></ion-input>\\n      </ion-item>\\n      \\n      <ion-item>\\n      <ion-label position=\\\"stacked\\\">Password</ion-label>\\n      <ion-input autocomplete=\\\"off\\\" name=\\\"password\\\" type=\\\"password\\\" [(ngModel)]=\\\"postData.password\\\"></ion-input>\\n      </ion-item>\\n      \\n    </ion-list>\\n    <ion-button expand=\\\"block\\\" share=\\\"round\\\" (click)=\\\"signupAction()\\\" color=\\\"success\\\">Create Account</ion-button>\\n    </form>\\n    <a routerLink=\\\"/login\\\">Login</a>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupPage } from './signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignupPageRoutingModule } from './signup-routing.module';\n\nimport { SignupPage } from './signup.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SignupPageRoutingModule\n  ],\n  declarations: [SignupPage]\n})\nexport class SignupPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NpZ251cC9zaWdudXAucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { ToastService } from 'src/app/services/toast/toast.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.page.html',\n  styleUrls: ['./signup.page.scss'],\n})\nexport class SignupPage implements OnInit {\n\n  public postData = {\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: ''\n  }\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private toastService: ToastService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  validateInputs() {\n    const email = this.postData.email.trim();\n    const password = this.postData.password.trim();\n    const firstName = this.postData.password.trim();\n    const lastName = this.postData.password.trim();\n\n    return (\n          this.postData.email && this.postData.password && this.postData.first_name && this.postData.last_name &&\n          email.length > 0 && password.length > 0 && firstName.length > 0 && lastName.length > 0\n          )\n  }\n\n  signupAction() {\n    if(this.validateInputs()) {\n      this.authService.signup(this.postData).subscribe((res: any) => {\n        if(res.userData) {\n          this.router.navigate(['login'])\n        } else {\n          this.toastService.presentToast('Error adding information');\n        }\n      },\n      (error: any) => {\n        this.toastService.presentToast('Network Connection Error');\n      })\n    } else {\n      this.toastService.presentToast('Please give some information');\n    }\n  }\n\n}\n"],"sourceRoot":"webpack:///"}