{"version":3,"sources":["./src/app/pages/login/login.page.html","./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.scss","./src/app/pages/login/login.page.ts","./src/app/services/notifications/notifications.service.ts","./src/app/services/push-notifications/push-notifications.service.ts"],"names":[],"mappings":"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","file":"pages-login-login-module-es2015.js","sourcesContent":["export default \"<ion-content class=\\\"ion-padding\\\">\\n  <h1 class=\\\"center\\\">SIGN IN</h1>\\n  <form>\\n    <ion-list>\\n      <ion-item>\\n      <ion-label position=\\\"stacked\\\">Email</ion-label>\\n      <ion-input autocomplete=\\\"off\\\" name=\\\"email\\\" type=\\\"text\\\" [(ngModel)]=\\\"postData.email\\\"></ion-input>\\n      </ion-item>\\n      \\n      <ion-item>\\n      <ion-label position=\\\"stacked\\\">Password</ion-label>\\n      <ion-input autocomplete=\\\"off\\\" name=\\\"password\\\" type=\\\"password\\\" [(ngModel)]=\\\"postData.password\\\"></ion-input>\\n      </ion-item>\\n      \\n    </ion-list>\\n    <ion-button expand=\\\"block\\\" share=\\\"round\\\" (click)=\\\"loginAction()\\\" color=\\\"success\\\">Login</ion-button>\\n    </form>\\n    <a routerLink=\\\"/signup\\\">Create Account</a>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthConstants } from 'src/app/config/auth-constants';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport { NotificationsService } from 'src/app/services/notifications/notifications.service';\nimport { PushNotificationsService } from 'src/app/services/push-notifications/push-notifications.service';\nimport { StorageService } from 'src/app/services/storage/storage.service';\nimport { ToastService } from 'src/app/services/toast/toast.service';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  public postData = {\n    email: '',\n    password: ''\n  }\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private storageService: StorageService,\n    private toastService: ToastService,\n    private notifServices: NotificationsService,\n    private pushNoficationService: PushNotificationsService\n  ) { }\n\n  ngOnInit() {\n    // this.testPushNotification();\n    // this.testNotification();\n  }\n\n  validateInputs() {\n    const email = this.postData.email.trim();\n    const password = this.postData.password.trim();\n\n    return (this.postData.email && this.postData.password && email.length > 0 && password.length > 0)\n  }\n\n  testPushNotification() {\n    this.pushNoficationService.notify();\n  }\n\n  testNotification() {\n    this.notifServices.notify();\n  }\n\n  loginAction() {\n\n    if(this.validateInputs()) {\n      this.authService.login(this.postData).subscribe((res: any) => {\n        if(res.userData.length) {\n          this.storageService.store(AuthConstants.AUTH, res.userData[0]);\n          this.router.navigate(['home'])\n        } else {\n          this.toastService.presentToast('Invalid credentials');\n        }\n      },\n      (error: any) => {\n        this.toastService.presentToast('Network Connection Error');\n      })\n    } else {\n      this.toastService.presentToast('Please give some information');\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationsService {\n\n  constructor(private localNotifications: LocalNotifications) { }\n\n  notify() {\n\n    this.localNotifications.schedule([{\n      id: 1,\n      title: 'Messy Family Notification',\n      text: 'Upcoming Event',\n      icon: ''\n   }]);\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Plugins,\n  PushNotification,\n  PushNotificationActionPerformed,\n  PushNotificationToken\n} from '@capacitor/core';\n\n\n\nconst { PushNotifications } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PushNotificationsService {\n\n  constructor() { }\n\n  notify() {\n\n    PushNotifications.requestPermission().then( result => {\n      if (result.granted) {\n        // Register with Apple / Google to receive push via APNS/FCM\n        PushNotifications.register();\n      } else {\n        // Show some error\n      }\n    });\n\n\n    PushNotifications.addListener('registration',\n      (token: PushNotificationToken) => {\n        alert('Push registration success, token: ' + token.value);\n      }\n    );\n\n    PushNotifications.addListener('pushNotificationReceived',\n      (notification: PushNotification) => {\n        alert('Push received: ' + JSON.stringify(notification));\n      }\n    );\n\n    PushNotifications.addListener('pushNotificationActionPerformed',\n      (notification: PushNotificationActionPerformed) => {\n        alert('Push action performed: ' + JSON.stringify(notification));\n      }\n    );\n\n\n  }\n}\n"],"sourceRoot":"webpack:///"}